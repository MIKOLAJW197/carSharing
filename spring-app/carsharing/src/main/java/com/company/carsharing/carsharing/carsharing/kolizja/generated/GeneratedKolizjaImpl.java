package com.company.carsharing.carsharing.carsharing.kolizja.generated;

import com.company.carsharing.carsharing.carsharing.kolizja.Kolizja;
import com.speedment.common.annotation.GeneratedCode;

import java.sql.Date;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.company.carsharing.carsharing.carsharing.kolizja.Kolizja}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedKolizjaImpl implements Kolizja {
    
    private int id;
    private String lokalizacja;
    private Date data;
    private Date przejazdDataRozpoczecia;
    private String przejazdUzytkownikMail;
    private String przejazdNrRejestracyjny;
    private int pracownikPesel;
    private String pracownikLokalizacja;
    
    protected GeneratedKolizjaImpl() {}
    
    @Override
    public int getId() {
        return id;
    }
    
    @Override
    public String getLokalizacja() {
        return lokalizacja;
    }
    
    @Override
    public Date getData() {
        return data;
    }
    
    @Override
    public Date getPrzejazdDataRozpoczecia() {
        return przejazdDataRozpoczecia;
    }
    
    @Override
    public String getPrzejazdUzytkownikMail() {
        return przejazdUzytkownikMail;
    }
    
    @Override
    public String getPrzejazdNrRejestracyjny() {
        return przejazdNrRejestracyjny;
    }
    
    @Override
    public int getPracownikPesel() {
        return pracownikPesel;
    }
    
    @Override
    public String getPracownikLokalizacja() {
        return pracownikLokalizacja;
    }
    
    @Override
    public Kolizja setId(int id) {
        this.id = id;
        return this;
    }
    
    @Override
    public Kolizja setLokalizacja(String lokalizacja) {
        this.lokalizacja = lokalizacja;
        return this;
    }
    
    @Override
    public Kolizja setData(Date data) {
        this.data = data;
        return this;
    }
    
    @Override
    public Kolizja setPrzejazdDataRozpoczecia(Date przejazdDataRozpoczecia) {
        this.przejazdDataRozpoczecia = przejazdDataRozpoczecia;
        return this;
    }
    
    @Override
    public Kolizja setPrzejazdUzytkownikMail(String przejazdUzytkownikMail) {
        this.przejazdUzytkownikMail = przejazdUzytkownikMail;
        return this;
    }
    
    @Override
    public Kolizja setPrzejazdNrRejestracyjny(String przejazdNrRejestracyjny) {
        this.przejazdNrRejestracyjny = przejazdNrRejestracyjny;
        return this;
    }
    
    @Override
    public Kolizja setPracownikPesel(int pracownikPesel) {
        this.pracownikPesel = pracownikPesel;
        return this;
    }
    
    @Override
    public Kolizja setPracownikLokalizacja(String pracownikLokalizacja) {
        this.pracownikLokalizacja = pracownikLokalizacja;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "                      + Objects.toString(getId()));
        sj.add("lokalizacja = "             + Objects.toString(getLokalizacja()));
        sj.add("data = "                    + Objects.toString(getData()));
        sj.add("przejazdDataRozpoczecia = " + Objects.toString(getPrzejazdDataRozpoczecia()));
        sj.add("przejazdUzytkownikMail = "  + Objects.toString(getPrzejazdUzytkownikMail()));
        sj.add("przejazdNrRejestracyjny = " + Objects.toString(getPrzejazdNrRejestracyjny()));
        sj.add("pracownikPesel = "          + Objects.toString(getPracownikPesel()));
        sj.add("pracownikLokalizacja = "    + Objects.toString(getPracownikLokalizacja()));
        return "KolizjaImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Kolizja)) { return false; }
        final Kolizja thatKolizja = (Kolizja)that;
        if (this.getId() != thatKolizja.getId()) { return false; }
        if (!Objects.equals(this.getLokalizacja(), thatKolizja.getLokalizacja())) { return false; }
        if (!Objects.equals(this.getData(), thatKolizja.getData())) { return false; }
        if (!Objects.equals(this.getPrzejazdDataRozpoczecia(), thatKolizja.getPrzejazdDataRozpoczecia())) { return false; }
        if (!Objects.equals(this.getPrzejazdUzytkownikMail(), thatKolizja.getPrzejazdUzytkownikMail())) { return false; }
        if (!Objects.equals(this.getPrzejazdNrRejestracyjny(), thatKolizja.getPrzejazdNrRejestracyjny())) { return false; }
        if (this.getPracownikPesel() != thatKolizja.getPracownikPesel()) { return false; }
        if (!Objects.equals(this.getPracownikLokalizacja(), thatKolizja.getPracownikLokalizacja())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getLokalizacja());
        hash = 31 * hash + Objects.hashCode(getData());
        hash = 31 * hash + Objects.hashCode(getPrzejazdDataRozpoczecia());
        hash = 31 * hash + Objects.hashCode(getPrzejazdUzytkownikMail());
        hash = 31 * hash + Objects.hashCode(getPrzejazdNrRejestracyjny());
        hash = 31 * hash + Integer.hashCode(getPracownikPesel());
        hash = 31 * hash + Objects.hashCode(getPracownikLokalizacja());
        return hash;
    }
}