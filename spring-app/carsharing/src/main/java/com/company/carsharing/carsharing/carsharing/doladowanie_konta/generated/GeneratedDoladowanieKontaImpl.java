package com.company.carsharing.carsharing.carsharing.doladowanie_konta.generated;

import com.company.carsharing.carsharing.carsharing.doladowanie_konta.DoladowanieKonta;
import com.company.carsharing.carsharing.carsharing.uzytkownik.Uzytkownik;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;

import java.sql.Date;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.company.carsharing.carsharing.carsharing.doladowanie_konta.DoladowanieKonta}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedDoladowanieKontaImpl implements DoladowanieKonta {
    
    private Date data;
    private double kwota;
    private String sposobPlatnosci;
    private String uzytkownikMail;
    
    protected GeneratedDoladowanieKontaImpl() {}
    
    @Override
    public Date getData() {
        return data;
    }
    
    @Override
    public double getKwota() {
        return kwota;
    }
    
    @Override
    public String getSposobPlatnosci() {
        return sposobPlatnosci;
    }
    
    @Override
    public String getUzytkownikMail() {
        return uzytkownikMail;
    }
    
    @Override
    public DoladowanieKonta setData(Date data) {
        this.data = data;
        return this;
    }
    
    @Override
    public DoladowanieKonta setKwota(double kwota) {
        this.kwota = kwota;
        return this;
    }
    
    @Override
    public DoladowanieKonta setSposobPlatnosci(String sposobPlatnosci) {
        this.sposobPlatnosci = sposobPlatnosci;
        return this;
    }
    
    @Override
    public DoladowanieKonta setUzytkownikMail(String uzytkownikMail) {
        this.uzytkownikMail = uzytkownikMail;
        return this;
    }
    
    @Override
    public Uzytkownik findUzytkownikMail(Manager<Uzytkownik> foreignManager) {
        return foreignManager.stream().filter(Uzytkownik.MAIL.equal(getUzytkownikMail())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("data = "            + Objects.toString(getData()));
        sj.add("kwota = "           + Objects.toString(getKwota()));
        sj.add("sposobPlatnosci = " + Objects.toString(getSposobPlatnosci()));
        sj.add("uzytkownikMail = "  + Objects.toString(getUzytkownikMail()));
        return "DoladowanieKontaImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof DoladowanieKonta)) { return false; }
        final DoladowanieKonta thatDoladowanieKonta = (DoladowanieKonta)that;
        if (!Objects.equals(this.getData(), thatDoladowanieKonta.getData())) { return false; }
        if (this.getKwota() != thatDoladowanieKonta.getKwota()) { return false; }
        if (!Objects.equals(this.getSposobPlatnosci(), thatDoladowanieKonta.getSposobPlatnosci())) { return false; }
        if (!Objects.equals(this.getUzytkownikMail(), thatDoladowanieKonta.getUzytkownikMail())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getData());
        hash = 31 * hash + Double.hashCode(getKwota());
        hash = 31 * hash + Objects.hashCode(getSposobPlatnosci());
        hash = 31 * hash + Objects.hashCode(getUzytkownikMail());
        return hash;
    }
}