package com.company.carsharing.carsharing.carsharing.kolizja.generated;

import com.company.carsharing.carsharing.carsharing.kolizja.Kolizja;
import com.company.carsharing.carsharing.carsharing.kolizja.KolizjaImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.common.injector.State.RESOLVED;

/**
 * The generated Sql Adapter for a {@link
 * com.company.carsharing.carsharing.carsharing.kolizja.Kolizja} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedKolizjaSqlAdapter implements SqlAdapter<Kolizja> {
    
    private final TableIdentifier<Kolizja> tableIdentifier;
    
    protected GeneratedKolizjaSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("carsharing", "carsharing", "kolizja");
    }
    
    protected Kolizja apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .setId(                      resultSet.getInt(1 + offset))
            .setLokalizacja(             resultSet.getString(2 + offset))
            .setData(                    resultSet.getDate(3 + offset))
            .setPrzejazdDataRozpoczecia( resultSet.getDate(4 + offset))
            .setPrzejazdUzytkownikMail(  resultSet.getString(5 + offset))
            .setPrzejazdNrRejestracyjny( resultSet.getString(6 + offset))
            .setPracownikPesel(          resultSet.getInt(7 + offset))
            .setPracownikLokalizacja(    resultSet.getString(8 + offset))
            ;
    }
    
    protected KolizjaImpl createEntity() {
        return new KolizjaImpl();
    }
    
    @Override
    public TableIdentifier<Kolizja> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, Kolizja> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, Kolizja> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}