package com.company.carsharing.carsharing.carsharing.cennik.generated;

import com.company.carsharing.carsharing.carsharing.cennik.Cennik;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.DoubleField;
import com.speedment.runtime.typemapper.TypeMapper;

import java.sql.Date;

/**
 * The generated base for the {@link
 * com.company.carsharing.carsharing.carsharing.cennik.Cennik}-interface
 * representing entities of the {@code cennik}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedCennik {
    
    /**
     * This Field corresponds to the {@link Cennik} field that can be obtained
     * using the {@link Cennik#getOdKiedy()} method.
     */
    ComparableField<Cennik, Date, Date> OD_KIEDY = ComparableField.create(
        Identifier.OD_KIEDY,
        Cennik::getOdKiedy,
        Cennik::setOdKiedy,
        TypeMapper.identity(),
        true
    );
    /**
     * This Field corresponds to the {@link Cennik} field that can be obtained
     * using the {@link Cennik#getDoKiedy()} method.
     */
    ComparableField<Cennik, Date, Date> DO_KIEDY = ComparableField.create(
        Identifier.DO_KIEDY,
        Cennik::getDoKiedy,
        Cennik::setDoKiedy,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Cennik} field that can be obtained
     * using the {@link Cennik#getCenaKilometra()} method.
     */
    DoubleField<Cennik, Double> CENA_KILOMETRA = DoubleField.create(
        Identifier.CENA_KILOMETRA,
        Cennik::getCenaKilometra,
        Cennik::setCenaKilometra,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link Cennik} field that can be obtained
     * using the {@link Cennik#getCenaMinuty()} method.
     */
    DoubleField<Cennik, Double> CENA_MINUTY = DoubleField.create(
        Identifier.CENA_MINUTY,
        Cennik::getCenaMinuty,
        Cennik::setCenaMinuty,
        TypeMapper.primitive(),
        false
    );
    
    /**
     * Returns the odKiedy of this Cennik. The odKiedy field corresponds to the
     * database column carsharing.carsharing.cennik.od_kiedy.
     * 
     * @return the odKiedy of this Cennik
     */
    Date getOdKiedy();
    
    /**
     * Returns the doKiedy of this Cennik. The doKiedy field corresponds to the
     * database column carsharing.carsharing.cennik.do_kiedy.
     * 
     * @return the doKiedy of this Cennik
     */
    Date getDoKiedy();
    
    /**
     * Returns the cenaKilometra of this Cennik. The cenaKilometra field
     * corresponds to the database column
     * carsharing.carsharing.cennik.cena_kilometra.
     * 
     * @return the cenaKilometra of this Cennik
     */
    double getCenaKilometra();
    
    /**
     * Returns the cenaMinuty of this Cennik. The cenaMinuty field corresponds
     * to the database column carsharing.carsharing.cennik.cena_minuty.
     * 
     * @return the cenaMinuty of this Cennik
     */
    double getCenaMinuty();
    
    /**
     * Sets the odKiedy of this Cennik. The odKiedy field corresponds to the
     * database column carsharing.carsharing.cennik.od_kiedy.
     * 
     * @param odKiedy to set of this Cennik
     * @return        this Cennik instance
     */
    Cennik setOdKiedy(Date odKiedy);
    
    /**
     * Sets the doKiedy of this Cennik. The doKiedy field corresponds to the
     * database column carsharing.carsharing.cennik.do_kiedy.
     * 
     * @param doKiedy to set of this Cennik
     * @return        this Cennik instance
     */
    Cennik setDoKiedy(Date doKiedy);
    
    /**
     * Sets the cenaKilometra of this Cennik. The cenaKilometra field
     * corresponds to the database column
     * carsharing.carsharing.cennik.cena_kilometra.
     * 
     * @param cenaKilometra to set of this Cennik
     * @return              this Cennik instance
     */
    Cennik setCenaKilometra(double cenaKilometra);
    
    /**
     * Sets the cenaMinuty of this Cennik. The cenaMinuty field corresponds to
     * the database column carsharing.carsharing.cennik.cena_minuty.
     * 
     * @param cenaMinuty to set of this Cennik
     * @return           this Cennik instance
     */
    Cennik setCenaMinuty(double cenaMinuty);
    
    enum Identifier implements ColumnIdentifier<Cennik> {
        
        OD_KIEDY       ("od_kiedy"),
        DO_KIEDY       ("do_kiedy"),
        CENA_KILOMETRA ("cena_kilometra"),
        CENA_MINUTY    ("cena_minuty");
        
        private final String columnId;
        private final TableIdentifier<Cennik> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "carsharing";
        }
        
        @Override
        public String getSchemaId() {
            return "carsharing";
        }
        
        @Override
        public String getTableId() {
            return "cennik";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<Cennik> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}