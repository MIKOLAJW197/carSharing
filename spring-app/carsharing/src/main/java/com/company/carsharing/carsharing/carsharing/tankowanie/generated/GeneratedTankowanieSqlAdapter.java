package com.company.carsharing.carsharing.carsharing.tankowanie.generated;

import com.company.carsharing.carsharing.carsharing.tankowanie.Tankowanie;
import com.company.carsharing.carsharing.carsharing.tankowanie.TankowanieImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.common.injector.State.RESOLVED;

/**
 * The generated Sql Adapter for a {@link
 * com.company.carsharing.carsharing.carsharing.tankowanie.Tankowanie} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedTankowanieSqlAdapter implements SqlAdapter<Tankowanie> {
    
    private final TableIdentifier<Tankowanie> tableIdentifier;
    
    protected GeneratedTankowanieSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("carsharing", "carsharing", "tankowanie");
    }
    
    protected Tankowanie apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .setId(                      resultSet.getInt(1 + offset))
            .setSiecStacji(              resultSet.getString(2 + offset))
            .setIleLitrow(               resultSet.getDouble(3 + offset))
            .setKwota(                   resultSet.getDouble(4 + offset))
            .setPrzejazdDataRozpoczecia( resultSet.getDate(5 + offset))
            .setPrzejazdUzytkownikMail(  resultSet.getString(6 + offset))
            .setPrzejazdNrRejestracyjny( resultSet.getString(7 + offset))
            ;
    }
    
    protected TankowanieImpl createEntity() {
        return new TankowanieImpl();
    }
    
    @Override
    public TableIdentifier<Tankowanie> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, Tankowanie> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, Tankowanie> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}