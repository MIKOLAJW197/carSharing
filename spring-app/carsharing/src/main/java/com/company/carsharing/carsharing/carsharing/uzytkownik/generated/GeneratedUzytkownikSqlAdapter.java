package com.company.carsharing.carsharing.carsharing.uzytkownik.generated;

import com.company.carsharing.carsharing.carsharing.uzytkownik.Uzytkownik;
import com.company.carsharing.carsharing.carsharing.uzytkownik.UzytkownikImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.common.injector.State.RESOLVED;

/**
 * The generated Sql Adapter for a {@link
 * com.company.carsharing.carsharing.carsharing.uzytkownik.Uzytkownik} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedUzytkownikSqlAdapter implements SqlAdapter<Uzytkownik> {
    
    private final TableIdentifier<Uzytkownik> tableIdentifier;
    
    protected GeneratedUzytkownikSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("carsharing", "carsharing", "uzytkownik");
    }
    
    protected Uzytkownik apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .setMail(          resultSet.getString(1 + offset))
            .setHaslo(         resultSet.getString(2 + offset))
            .setImie(          resultSet.getString(3 + offset))
            .setNazwisko(      resultSet.getString(4 + offset))
            .setPesel(         resultSet.getInt(5 + offset))
            .setStanSkarbonki( resultSet.getDouble(6 + offset))
            ;
    }
    
    protected UzytkownikImpl createEntity() {
        return new UzytkownikImpl();
    }
    
    @Override
    public TableIdentifier<Uzytkownik> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, Uzytkownik> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, Uzytkownik> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}