package com.company.carsharing.carsharing.carsharing.tankowanie.generated;

import com.company.carsharing.carsharing.carsharing.tankowanie.Tankowanie;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.DoubleField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

import java.sql.Date;

/**
 * The generated base for the {@link
 * com.company.carsharing.carsharing.carsharing.tankowanie.Tankowanie}-interface
 * representing entities of the {@code tankowanie}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedTankowanie {
    
    /**
     * This Field corresponds to the {@link Tankowanie} field that can be
     * obtained using the {@link Tankowanie#getId()} method.
     */
    IntField<Tankowanie, Integer> ID = IntField.create(
        Identifier.ID,
        Tankowanie::getId,
        Tankowanie::setId,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link Tankowanie} field that can be
     * obtained using the {@link Tankowanie#getSiecStacji()} method.
     */
    StringField<Tankowanie, String> SIEC_STACJI = StringField.create(
        Identifier.SIEC_STACJI,
        Tankowanie::getSiecStacji,
        Tankowanie::setSiecStacji,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Tankowanie} field that can be
     * obtained using the {@link Tankowanie#getIleLitrow()} method.
     */
    DoubleField<Tankowanie, Double> ILE_LITROW = DoubleField.create(
        Identifier.ILE_LITROW,
        Tankowanie::getIleLitrow,
        Tankowanie::setIleLitrow,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link Tankowanie} field that can be
     * obtained using the {@link Tankowanie#getKwota()} method.
     */
    DoubleField<Tankowanie, Double> KWOTA = DoubleField.create(
        Identifier.KWOTA,
        Tankowanie::getKwota,
        Tankowanie::setKwota,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link Tankowanie} field that can be
     * obtained using the {@link Tankowanie#getPrzejazdDataRozpoczecia()}
     * method.
     */
    ComparableField<Tankowanie, Date, Date> PRZEJAZD_DATA_ROZPOCZECIA = ComparableField.create(
        Identifier.PRZEJAZD_DATA_ROZPOCZECIA,
        Tankowanie::getPrzejazdDataRozpoczecia,
        Tankowanie::setPrzejazdDataRozpoczecia,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Tankowanie} field that can be
     * obtained using the {@link Tankowanie#getPrzejazdUzytkownikMail()} method.
     */
    StringField<Tankowanie, String> PRZEJAZD_UZYTKOWNIK_MAIL = StringField.create(
        Identifier.PRZEJAZD_UZYTKOWNIK_MAIL,
        Tankowanie::getPrzejazdUzytkownikMail,
        Tankowanie::setPrzejazdUzytkownikMail,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Tankowanie} field that can be
     * obtained using the {@link Tankowanie#getPrzejazdNrRejestracyjny()}
     * method.
     */
    StringField<Tankowanie, String> PRZEJAZD_NR_REJESTRACYJNY = StringField.create(
        Identifier.PRZEJAZD_NR_REJESTRACYJNY,
        Tankowanie::getPrzejazdNrRejestracyjny,
        Tankowanie::setPrzejazdNrRejestracyjny,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the id of this Tankowanie. The id field corresponds to the
     * database column carsharing.carsharing.tankowanie.id.
     * 
     * @return the id of this Tankowanie
     */
    int getId();
    
    /**
     * Returns the siecStacji of this Tankowanie. The siecStacji field
     * corresponds to the database column
     * carsharing.carsharing.tankowanie.siec_stacji.
     * 
     * @return the siecStacji of this Tankowanie
     */
    String getSiecStacji();
    
    /**
     * Returns the ileLitrow of this Tankowanie. The ileLitrow field corresponds
     * to the database column carsharing.carsharing.tankowanie.ile_litrow.
     * 
     * @return the ileLitrow of this Tankowanie
     */
    double getIleLitrow();
    
    /**
     * Returns the kwota of this Tankowanie. The kwota field corresponds to the
     * database column carsharing.carsharing.tankowanie.kwota.
     * 
     * @return the kwota of this Tankowanie
     */
    double getKwota();
    
    /**
     * Returns the przejazdDataRozpoczecia of this Tankowanie. The
     * przejazdDataRozpoczecia field corresponds to the database column
     * carsharing.carsharing.tankowanie.przejazd_data_rozpoczecia.
     * 
     * @return the przejazdDataRozpoczecia of this Tankowanie
     */
    Date getPrzejazdDataRozpoczecia();
    
    /**
     * Returns the przejazdUzytkownikMail of this Tankowanie. The
     * przejazdUzytkownikMail field corresponds to the database column
     * carsharing.carsharing.tankowanie.przejazd_uzytkownik_mail.
     * 
     * @return the przejazdUzytkownikMail of this Tankowanie
     */
    String getPrzejazdUzytkownikMail();
    
    /**
     * Returns the przejazdNrRejestracyjny of this Tankowanie. The
     * przejazdNrRejestracyjny field corresponds to the database column
     * carsharing.carsharing.tankowanie.przejazd_nr_rejestracyjny.
     * 
     * @return the przejazdNrRejestracyjny of this Tankowanie
     */
    String getPrzejazdNrRejestracyjny();
    
    /**
     * Sets the id of this Tankowanie. The id field corresponds to the database
     * column carsharing.carsharing.tankowanie.id.
     * 
     * @param id to set of this Tankowanie
     * @return   this Tankowanie instance
     */
    Tankowanie setId(int id);
    
    /**
     * Sets the siecStacji of this Tankowanie. The siecStacji field corresponds
     * to the database column carsharing.carsharing.tankowanie.siec_stacji.
     * 
     * @param siecStacji to set of this Tankowanie
     * @return           this Tankowanie instance
     */
    Tankowanie setSiecStacji(String siecStacji);
    
    /**
     * Sets the ileLitrow of this Tankowanie. The ileLitrow field corresponds to
     * the database column carsharing.carsharing.tankowanie.ile_litrow.
     * 
     * @param ileLitrow to set of this Tankowanie
     * @return          this Tankowanie instance
     */
    Tankowanie setIleLitrow(double ileLitrow);
    
    /**
     * Sets the kwota of this Tankowanie. The kwota field corresponds to the
     * database column carsharing.carsharing.tankowanie.kwota.
     * 
     * @param kwota to set of this Tankowanie
     * @return      this Tankowanie instance
     */
    Tankowanie setKwota(double kwota);
    
    /**
     * Sets the przejazdDataRozpoczecia of this Tankowanie. The
     * przejazdDataRozpoczecia field corresponds to the database column
     * carsharing.carsharing.tankowanie.przejazd_data_rozpoczecia.
     * 
     * @param przejazdDataRozpoczecia to set of this Tankowanie
     * @return                        this Tankowanie instance
     */
    Tankowanie setPrzejazdDataRozpoczecia(Date przejazdDataRozpoczecia);
    
    /**
     * Sets the przejazdUzytkownikMail of this Tankowanie. The
     * przejazdUzytkownikMail field corresponds to the database column
     * carsharing.carsharing.tankowanie.przejazd_uzytkownik_mail.
     * 
     * @param przejazdUzytkownikMail to set of this Tankowanie
     * @return                       this Tankowanie instance
     */
    Tankowanie setPrzejazdUzytkownikMail(String przejazdUzytkownikMail);
    
    /**
     * Sets the przejazdNrRejestracyjny of this Tankowanie. The
     * przejazdNrRejestracyjny field corresponds to the database column
     * carsharing.carsharing.tankowanie.przejazd_nr_rejestracyjny.
     * 
     * @param przejazdNrRejestracyjny to set of this Tankowanie
     * @return                        this Tankowanie instance
     */
    Tankowanie setPrzejazdNrRejestracyjny(String przejazdNrRejestracyjny);
    
    enum Identifier implements ColumnIdentifier<Tankowanie> {
        
        ID                        ("id"),
        SIEC_STACJI               ("siec_stacji"),
        ILE_LITROW                ("ile_litrow"),
        KWOTA                     ("kwota"),
        PRZEJAZD_DATA_ROZPOCZECIA ("przejazd_data_rozpoczecia"),
        PRZEJAZD_UZYTKOWNIK_MAIL  ("przejazd_uzytkownik_mail"),
        PRZEJAZD_NR_REJESTRACYJNY ("przejazd_nr_rejestracyjny");
        
        private final String columnId;
        private final TableIdentifier<Tankowanie> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "carsharing";
        }
        
        @Override
        public String getSchemaId() {
            return "carsharing";
        }
        
        @Override
        public String getTableId() {
            return "tankowanie";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<Tankowanie> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}