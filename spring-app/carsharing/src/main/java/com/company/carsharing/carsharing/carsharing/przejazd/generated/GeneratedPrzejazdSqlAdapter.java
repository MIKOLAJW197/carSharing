package com.company.carsharing.carsharing.carsharing.przejazd.generated;

import com.company.carsharing.carsharing.carsharing.przejazd.Przejazd;
import com.company.carsharing.carsharing.carsharing.przejazd.PrzejazdImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.common.injector.State.RESOLVED;

/**
 * The generated Sql Adapter for a {@link
 * com.company.carsharing.carsharing.carsharing.przejazd.Przejazd} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedPrzejazdSqlAdapter implements SqlAdapter<Przejazd> {
    
    private final TableIdentifier<Przejazd> tableIdentifier;
    
    protected GeneratedPrzejazdSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("carsharing", "carsharing", "przejazd");
    }
    
    protected Przejazd apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .setDataRozpoczecia(         resultSet.getDate(1 + offset))
            .setDataZakonczenia(         resultSet.getDate(2 + offset))
            .setDytans(                  resultSet.getDouble(3 + offset))
            .setLokalizacjaPoczatkowa(   resultSet.getString(4 + offset))
            .setLokalizacjaKoncowa(      resultSet.getString(5 + offset))
            .setUzytkownikMail(          resultSet.getString(6 + offset))
            .setCennikOdKiedy(           resultSet.getDate(7 + offset))
            .setSamochodNrRejestracyjny( resultSet.getString(8 + offset))
            ;
    }
    
    protected PrzejazdImpl createEntity() {
        return new PrzejazdImpl();
    }
    
    @Override
    public TableIdentifier<Przejazd> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, Przejazd> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, Przejazd> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}