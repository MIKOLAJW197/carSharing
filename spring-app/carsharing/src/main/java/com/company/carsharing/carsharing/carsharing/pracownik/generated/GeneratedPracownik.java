package com.company.carsharing.carsharing.carsharing.pracownik.generated;

import com.company.carsharing.carsharing.carsharing.baza.Baza;
import com.company.carsharing.carsharing.carsharing.pracownik.Pracownik;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.field.StringForeignKeyField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * com.company.carsharing.carsharing.carsharing.pracownik.Pracownik}-interface
 * representing entities of the {@code pracownik}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedPracownik {
    
    /**
     * This Field corresponds to the {@link Pracownik} field that can be
     * obtained using the {@link Pracownik#getPesel()} method.
     */
    IntField<Pracownik, Integer> PESEL = IntField.create(
        Identifier.PESEL,
        Pracownik::getPesel,
        Pracownik::setPesel,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link Pracownik} field that can be
     * obtained using the {@link Pracownik#getImie()} method.
     */
    StringField<Pracownik, String> IMIE = StringField.create(
        Identifier.IMIE,
        Pracownik::getImie,
        Pracownik::setImie,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Pracownik} field that can be
     * obtained using the {@link Pracownik#getNazwisko()} method.
     */
    StringField<Pracownik, String> NAZWISKO = StringField.create(
        Identifier.NAZWISKO,
        Pracownik::getNazwisko,
        Pracownik::setNazwisko,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Pracownik} field that can be
     * obtained using the {@link Pracownik#getBazaLokalizacja()} method.
     */
    StringForeignKeyField<Pracownik, String, Baza> BAZA_LOKALIZACJA = StringForeignKeyField.create(
        Identifier.BAZA_LOKALIZACJA,
        Pracownik::getBazaLokalizacja,
        Pracownik::setBazaLokalizacja,
        Baza.LOKALIZACJA,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the pesel of this Pracownik. The pesel field corresponds to the
     * database column carsharing.carsharing.pracownik.pesel.
     * 
     * @return the pesel of this Pracownik
     */
    int getPesel();
    
    /**
     * Returns the imie of this Pracownik. The imie field corresponds to the
     * database column carsharing.carsharing.pracownik.imie.
     * 
     * @return the imie of this Pracownik
     */
    String getImie();
    
    /**
     * Returns the nazwisko of this Pracownik. The nazwisko field corresponds to
     * the database column carsharing.carsharing.pracownik.nazwisko.
     * 
     * @return the nazwisko of this Pracownik
     */
    String getNazwisko();
    
    /**
     * Returns the bazaLokalizacja of this Pracownik. The bazaLokalizacja field
     * corresponds to the database column
     * carsharing.carsharing.pracownik.baza_lokalizacja.
     * 
     * @return the bazaLokalizacja of this Pracownik
     */
    String getBazaLokalizacja();
    
    /**
     * Sets the pesel of this Pracownik. The pesel field corresponds to the
     * database column carsharing.carsharing.pracownik.pesel.
     * 
     * @param pesel to set of this Pracownik
     * @return      this Pracownik instance
     */
    Pracownik setPesel(int pesel);
    
    /**
     * Sets the imie of this Pracownik. The imie field corresponds to the
     * database column carsharing.carsharing.pracownik.imie.
     * 
     * @param imie to set of this Pracownik
     * @return     this Pracownik instance
     */
    Pracownik setImie(String imie);
    
    /**
     * Sets the nazwisko of this Pracownik. The nazwisko field corresponds to
     * the database column carsharing.carsharing.pracownik.nazwisko.
     * 
     * @param nazwisko to set of this Pracownik
     * @return         this Pracownik instance
     */
    Pracownik setNazwisko(String nazwisko);
    
    /**
     * Sets the bazaLokalizacja of this Pracownik. The bazaLokalizacja field
     * corresponds to the database column
     * carsharing.carsharing.pracownik.baza_lokalizacja.
     * 
     * @param bazaLokalizacja to set of this Pracownik
     * @return                this Pracownik instance
     */
    Pracownik setBazaLokalizacja(String bazaLokalizacja);
    
    /**
     * Queries the specified manager for the referenced Baza. If no such Baza
     * exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Baza findBazaLokalizacja(Manager<Baza> foreignManager);
    
    enum Identifier implements ColumnIdentifier<Pracownik> {
        
        PESEL            ("pesel"),
        IMIE             ("imie"),
        NAZWISKO         ("nazwisko"),
        BAZA_LOKALIZACJA ("baza_lokalizacja");
        
        private final String columnId;
        private final TableIdentifier<Pracownik> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "carsharing";
        }
        
        @Override
        public String getSchemaId() {
            return "carsharing";
        }
        
        @Override
        public String getTableId() {
            return "pracownik";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<Pracownik> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}