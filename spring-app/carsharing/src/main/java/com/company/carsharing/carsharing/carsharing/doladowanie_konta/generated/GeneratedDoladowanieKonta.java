package com.company.carsharing.carsharing.carsharing.doladowanie_konta.generated;

import com.company.carsharing.carsharing.carsharing.doladowanie_konta.DoladowanieKonta;
import com.company.carsharing.carsharing.carsharing.uzytkownik.Uzytkownik;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.DoubleField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.field.StringForeignKeyField;
import com.speedment.runtime.typemapper.TypeMapper;

import java.sql.Date;

/**
 * The generated base for the {@link
 * com.company.carsharing.carsharing.carsharing.doladowanie_konta.DoladowanieKonta}-interface
 * representing entities of the {@code doladowanie_konta}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedDoladowanieKonta {
    
    /**
     * This Field corresponds to the {@link DoladowanieKonta} field that can be
     * obtained using the {@link DoladowanieKonta#getData()} method.
     */
    ComparableField<DoladowanieKonta, Date, Date> DATA = ComparableField.create(
        Identifier.DATA,
        DoladowanieKonta::getData,
        DoladowanieKonta::setData,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link DoladowanieKonta} field that can be
     * obtained using the {@link DoladowanieKonta#getKwota()} method.
     */
    DoubleField<DoladowanieKonta, Double> KWOTA = DoubleField.create(
        Identifier.KWOTA,
        DoladowanieKonta::getKwota,
        DoladowanieKonta::setKwota,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link DoladowanieKonta} field that can be
     * obtained using the {@link DoladowanieKonta#getSposobPlatnosci()} method.
     */
    StringField<DoladowanieKonta, String> SPOSOB_PLATNOSCI = StringField.create(
        Identifier.SPOSOB_PLATNOSCI,
        DoladowanieKonta::getSposobPlatnosci,
        DoladowanieKonta::setSposobPlatnosci,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link DoladowanieKonta} field that can be
     * obtained using the {@link DoladowanieKonta#getUzytkownikMail()} method.
     */
    StringForeignKeyField<DoladowanieKonta, String, Uzytkownik> UZYTKOWNIK_MAIL = StringForeignKeyField.create(
        Identifier.UZYTKOWNIK_MAIL,
        DoladowanieKonta::getUzytkownikMail,
        DoladowanieKonta::setUzytkownikMail,
        Uzytkownik.MAIL,
        TypeMapper.identity(),
        true
    );
    
    /**
     * Returns the data of this DoladowanieKonta. The data field corresponds to
     * the database column carsharing.carsharing.doladowanie_konta.data.
     * 
     * @return the data of this DoladowanieKonta
     */
    Date getData();
    
    /**
     * Returns the kwota of this DoladowanieKonta. The kwota field corresponds
     * to the database column carsharing.carsharing.doladowanie_konta.kwota.
     * 
     * @return the kwota of this DoladowanieKonta
     */
    double getKwota();
    
    /**
     * Returns the sposobPlatnosci of this DoladowanieKonta. The sposobPlatnosci
     * field corresponds to the database column
     * carsharing.carsharing.doladowanie_konta.sposob_platnosci.
     * 
     * @return the sposobPlatnosci of this DoladowanieKonta
     */
    String getSposobPlatnosci();
    
    /**
     * Returns the uzytkownikMail of this DoladowanieKonta. The uzytkownikMail
     * field corresponds to the database column
     * carsharing.carsharing.doladowanie_konta.uzytkownik_mail.
     * 
     * @return the uzytkownikMail of this DoladowanieKonta
     */
    String getUzytkownikMail();
    
    /**
     * Sets the data of this DoladowanieKonta. The data field corresponds to the
     * database column carsharing.carsharing.doladowanie_konta.data.
     * 
     * @param data to set of this DoladowanieKonta
     * @return     this DoladowanieKonta instance
     */
    DoladowanieKonta setData(Date data);
    
    /**
     * Sets the kwota of this DoladowanieKonta. The kwota field corresponds to
     * the database column carsharing.carsharing.doladowanie_konta.kwota.
     * 
     * @param kwota to set of this DoladowanieKonta
     * @return      this DoladowanieKonta instance
     */
    DoladowanieKonta setKwota(double kwota);
    
    /**
     * Sets the sposobPlatnosci of this DoladowanieKonta. The sposobPlatnosci
     * field corresponds to the database column
     * carsharing.carsharing.doladowanie_konta.sposob_platnosci.
     * 
     * @param sposobPlatnosci to set of this DoladowanieKonta
     * @return                this DoladowanieKonta instance
     */
    DoladowanieKonta setSposobPlatnosci(String sposobPlatnosci);
    
    /**
     * Sets the uzytkownikMail of this DoladowanieKonta. The uzytkownikMail
     * field corresponds to the database column
     * carsharing.carsharing.doladowanie_konta.uzytkownik_mail.
     * 
     * @param uzytkownikMail to set of this DoladowanieKonta
     * @return               this DoladowanieKonta instance
     */
    DoladowanieKonta setUzytkownikMail(String uzytkownikMail);
    
    /**
     * Queries the specified manager for the referenced Uzytkownik. If no such
     * Uzytkownik exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Uzytkownik findUzytkownikMail(Manager<Uzytkownik> foreignManager);
    
    enum Identifier implements ColumnIdentifier<DoladowanieKonta> {
        
        DATA             ("data"),
        KWOTA            ("kwota"),
        SPOSOB_PLATNOSCI ("sposob_platnosci"),
        UZYTKOWNIK_MAIL  ("uzytkownik_mail");
        
        private final String columnId;
        private final TableIdentifier<DoladowanieKonta> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "carsharing";
        }
        
        @Override
        public String getSchemaId() {
            return "carsharing";
        }
        
        @Override
        public String getTableId() {
            return "doladowanie_konta";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<DoladowanieKonta> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}