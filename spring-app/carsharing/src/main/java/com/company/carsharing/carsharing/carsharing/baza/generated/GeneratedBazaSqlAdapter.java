package com.company.carsharing.carsharing.carsharing.baza.generated;

import com.company.carsharing.carsharing.carsharing.baza.Baza;
import com.company.carsharing.carsharing.carsharing.baza.BazaImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.common.injector.State.RESOLVED;

/**
 * The generated Sql Adapter for a {@link
 * com.company.carsharing.carsharing.carsharing.baza.Baza} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedBazaSqlAdapter implements SqlAdapter<Baza> {
    
    private final TableIdentifier<Baza> tableIdentifier;
    
    protected GeneratedBazaSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("carsharing", "carsharing", "baza");
    }
    
    protected Baza apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .setLokalizacja(  resultSet.getString(1 + offset))
            .setLiczbaMiejsc( resultSet.getInt(2 + offset))
            ;
    }
    
    protected BazaImpl createEntity() {
        return new BazaImpl();
    }
    
    @Override
    public TableIdentifier<Baza> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, Baza> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, Baza> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}