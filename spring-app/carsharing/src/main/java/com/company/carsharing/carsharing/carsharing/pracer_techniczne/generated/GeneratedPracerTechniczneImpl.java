package com.company.carsharing.carsharing.carsharing.pracer_techniczne.generated;

import com.company.carsharing.carsharing.carsharing.baza.Baza;
import com.company.carsharing.carsharing.carsharing.pracer_techniczne.PracerTechniczne;
import com.company.carsharing.carsharing.carsharing.samochod.Samochod;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;

import java.sql.Date;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.company.carsharing.carsharing.carsharing.pracer_techniczne.PracerTechniczne}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedPracerTechniczneImpl implements PracerTechniczne {
    
    private int id;
    private String coRobione;
    private Date odKiedy;
    private Date doKiedy;
    private String bazaLokalizacja;
    private String samochodNrRejestracyjny;
    
    protected GeneratedPracerTechniczneImpl() {}
    
    @Override
    public int getId() {
        return id;
    }
    
    @Override
    public String getCoRobione() {
        return coRobione;
    }
    
    @Override
    public Date getOdKiedy() {
        return odKiedy;
    }
    
    @Override
    public Date getDoKiedy() {
        return doKiedy;
    }
    
    @Override
    public String getBazaLokalizacja() {
        return bazaLokalizacja;
    }
    
    @Override
    public String getSamochodNrRejestracyjny() {
        return samochodNrRejestracyjny;
    }
    
    @Override
    public PracerTechniczne setId(int id) {
        this.id = id;
        return this;
    }
    
    @Override
    public PracerTechniczne setCoRobione(String coRobione) {
        this.coRobione = coRobione;
        return this;
    }
    
    @Override
    public PracerTechniczne setOdKiedy(Date odKiedy) {
        this.odKiedy = odKiedy;
        return this;
    }
    
    @Override
    public PracerTechniczne setDoKiedy(Date doKiedy) {
        this.doKiedy = doKiedy;
        return this;
    }
    
    @Override
    public PracerTechniczne setBazaLokalizacja(String bazaLokalizacja) {
        this.bazaLokalizacja = bazaLokalizacja;
        return this;
    }
    
    @Override
    public PracerTechniczne setSamochodNrRejestracyjny(String samochodNrRejestracyjny) {
        this.samochodNrRejestracyjny = samochodNrRejestracyjny;
        return this;
    }
    
    @Override
    public Baza findBazaLokalizacja(Manager<Baza> foreignManager) {
        return foreignManager.stream().filter(Baza.LOKALIZACJA.equal(getBazaLokalizacja())).findAny().orElse(null);
    }
    
    @Override
    public Samochod findSamochodNrRejestracyjny(Manager<Samochod> foreignManager) {
        return foreignManager.stream().filter(Samochod.NR_REJESTRACYJNY.equal(getSamochodNrRejestracyjny())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "                      + Objects.toString(getId()));
        sj.add("coRobione = "               + Objects.toString(getCoRobione()));
        sj.add("odKiedy = "                 + Objects.toString(getOdKiedy()));
        sj.add("doKiedy = "                 + Objects.toString(getDoKiedy()));
        sj.add("bazaLokalizacja = "         + Objects.toString(getBazaLokalizacja()));
        sj.add("samochodNrRejestracyjny = " + Objects.toString(getSamochodNrRejestracyjny()));
        return "PracerTechniczneImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof PracerTechniczne)) { return false; }
        final PracerTechniczne thatPracerTechniczne = (PracerTechniczne)that;
        if (this.getId() != thatPracerTechniczne.getId()) { return false; }
        if (!Objects.equals(this.getCoRobione(), thatPracerTechniczne.getCoRobione())) { return false; }
        if (!Objects.equals(this.getOdKiedy(), thatPracerTechniczne.getOdKiedy())) { return false; }
        if (!Objects.equals(this.getDoKiedy(), thatPracerTechniczne.getDoKiedy())) { return false; }
        if (!Objects.equals(this.getBazaLokalizacja(), thatPracerTechniczne.getBazaLokalizacja())) { return false; }
        if (!Objects.equals(this.getSamochodNrRejestracyjny(), thatPracerTechniczne.getSamochodNrRejestracyjny())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(getCoRobione());
        hash = 31 * hash + Objects.hashCode(getOdKiedy());
        hash = 31 * hash + Objects.hashCode(getDoKiedy());
        hash = 31 * hash + Objects.hashCode(getBazaLokalizacja());
        hash = 31 * hash + Objects.hashCode(getSamochodNrRejestracyjny());
        return hash;
    }
}