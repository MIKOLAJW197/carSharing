package com.company.carsharing.carsharing.carsharing.uzytkownik.generated;

import com.company.carsharing.carsharing.carsharing.uzytkownik.Uzytkownik;
import com.speedment.common.annotation.GeneratedCode;

import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.company.carsharing.carsharing.carsharing.uzytkownik.Uzytkownik}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedUzytkownikImpl implements Uzytkownik {
    
    private String mail;
    private String haslo;
    private String imie;
    private String nazwisko;
    private int pesel;
    private double stanSkarbonki;
    
    protected GeneratedUzytkownikImpl() {}
    
    @Override
    public String getMail() {
        return mail;
    }
    
    @Override
    public String getHaslo() {
        return haslo;
    }
    
    @Override
    public String getImie() {
        return imie;
    }
    
    @Override
    public String getNazwisko() {
        return nazwisko;
    }
    
    @Override
    public int getPesel() {
        return pesel;
    }
    
    @Override
    public double getStanSkarbonki() {
        return stanSkarbonki;
    }
    
    @Override
    public Uzytkownik setMail(String mail) {
        this.mail = mail;
        return this;
    }
    
    @Override
    public Uzytkownik setHaslo(String haslo) {
        this.haslo = haslo;
        return this;
    }
    
    @Override
    public Uzytkownik setImie(String imie) {
        this.imie = imie;
        return this;
    }
    
    @Override
    public Uzytkownik setNazwisko(String nazwisko) {
        this.nazwisko = nazwisko;
        return this;
    }
    
    @Override
    public Uzytkownik setPesel(int pesel) {
        this.pesel = pesel;
        return this;
    }
    
    @Override
    public Uzytkownik setStanSkarbonki(double stanSkarbonki) {
        this.stanSkarbonki = stanSkarbonki;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("mail = "          + Objects.toString(getMail()));
        sj.add("haslo = "         + Objects.toString(getHaslo()));
        sj.add("imie = "          + Objects.toString(getImie()));
        sj.add("nazwisko = "      + Objects.toString(getNazwisko()));
        sj.add("pesel = "         + Objects.toString(getPesel()));
        sj.add("stanSkarbonki = " + Objects.toString(getStanSkarbonki()));
        return "UzytkownikImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Uzytkownik)) { return false; }
        final Uzytkownik thatUzytkownik = (Uzytkownik)that;
        if (!Objects.equals(this.getMail(), thatUzytkownik.getMail())) { return false; }
        if (!Objects.equals(this.getHaslo(), thatUzytkownik.getHaslo())) { return false; }
        if (!Objects.equals(this.getImie(), thatUzytkownik.getImie())) { return false; }
        if (!Objects.equals(this.getNazwisko(), thatUzytkownik.getNazwisko())) { return false; }
        if (this.getPesel() != thatUzytkownik.getPesel()) { return false; }
        if (this.getStanSkarbonki() != thatUzytkownik.getStanSkarbonki()) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getMail());
        hash = 31 * hash + Objects.hashCode(getHaslo());
        hash = 31 * hash + Objects.hashCode(getImie());
        hash = 31 * hash + Objects.hashCode(getNazwisko());
        hash = 31 * hash + Integer.hashCode(getPesel());
        hash = 31 * hash + Double.hashCode(getStanSkarbonki());
        return hash;
    }
}